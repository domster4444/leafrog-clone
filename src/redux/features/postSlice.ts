import { createSlice, PayloadAction } from '@reduxjs/toolkit';

export interface IPosts {
  userId: number;
  id: number;
  title: string;
  body: string;
}

// state will have either data or null
interface PostState {
  postsD: IPosts[] | null;
}

//todo: this name postD are representative names,chhose wisely
//todo: while loggin state of useSelector we got , state={
//todo: store'sReducerName that this file export : postD:value
//todo:  }

const initialState: PostState = {
  postsD: null,
};

export const postSlice = createSlice({
  name: 'jpt',
  initialState,
  reducers: {
    cleanState: () => initialState,
    // Save the user's info
    setPostsData: (state, action: PayloadAction<any>) => {
      console.log('action.payload', action.payload);
      state.postsD = action.payload.newPostFromClient;
    },
  },
});

///*NAMED_EXPORT DISPATCH METHODS FOR COMPONENTS
// Export this for dispatch use
export const { cleanState, setPostsData } = postSlice.actions;
///*DEFAULT_EXPORT REDUCER TO STORE
//  Export this autogenerated.reducer to be included in the store.
export default postSlice.reducer; //! you can use any name to import this reducer, postReducer/postSliceReducer in store
